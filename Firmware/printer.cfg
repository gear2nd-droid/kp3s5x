# This file contains common pin mappings for MKS Robin Nano (v1.2.004)
# boards. To use this config, the firmware should be compiled for the
# STM32F103. When running "make menuconfig", enable "extra low-level
# configuration setup", select the 28KiB bootloader, disable "USB for
# communication", and select USART3 for the "Serial Port".

# Note that the "make flash" command does not work with MKS Robin
# boards. After running "make", run the following command:
#   ./scripts/update_mks_robin.py out/klipper.bin out/Robin_nano.bin
# Copy the file out/Robin_nano.bin to an SD card and then restart the
# printer with that SD card.

# See the example.cfg file for a description of available parameters.

[printer]
kinematics: trunnion_bc
max_velocity: 300
max_accel: 500
max_accel_to_decel: 500
max_z_velocity: 25
max_z_accel: 100
square_corner_velocity: 5.0
is_6axes: True
after_homing_z_position: 20
before_homing_z_move_x: 40
before_homing_z_move_y: 0
offset_x: 0.0
offset_y: 0.0
offset_z: 0.0
offset_a: -3.5#-1.1
offset_b: 0.0
offset_c: 0.0

[input_shaper]
shaper_freq_x: 41.4
shaper_freq_y: 29.2
shaper_type: mzv

[extruder]
step_pin: PD6
dir_pin: !PD3
enable_pin: !PB3
# for MK8 Extruder
rotation_distance: 7.64
full_steps_per_rotation: 200
microsteps: 32
max_extrude_only_distance: 100000
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_velocity: 50
max_extrude_only_accel: 3000
instantaneous_corner_velocity: 1.50
heater_pin: PC3
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
control: pid
pid_Kp: 19.040
pid_Ki: 1.076
pid_Kd: 84.251
min_temp: 0
max_temp: 280
pressure_advance: 0.08

#[virtual_sdcard]
#path: ~/gcode_files
[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[stepper_x]
step_pin: PE3
dir_pin: PE2
enable_pin: !PE4
rotation_distance: 40
microsteps: 32
endstop_pin: ^!PA15
position_endstop: -54.5
position_min: -55
position_max: 80
homing_speed: 50
homing_retract_dist: 5
homing_positive_dir: False

[stepper_y]
step_pin: PE0
dir_pin: PB9
enable_pin: !PE1
rotation_distance: 40
full_steps_per_rotation: 200
microsteps: 32
endstop_pin: ^!PA12
position_endstop: -96.7
position_min: -100
position_max: 80
homing_speed: 50
homing_retract_dist: 5
homing_positive_dir: False

[stepper_z]
step_pin: PB5
dir_pin: !PB4
enable_pin: !PB8
rotation_distance: 8
full_steps_per_rotation: 200
microsteps: 32
endstop_pin: ^!PA11 #probe:z_virtual_endstop #defines the Z endstop as the BLtouch
position_endstop: 43.5
position_min: -2
position_max: 60
homing_speed: 10
homing_retract_dist: 0.0
homing_positive_dir: True

[stepper_b]
step_pin: pico:gpio10
dir_pin: pico:gpio11
enable_pin: !pico:gpio14
rotation_distance: 180
full_steps_per_rotation: 200
microsteps: 32
endstop_pin: PC4
position_endstop: -5.5
position_min: -180
position_max: 15
homing_speed: 5
homing_retract_dist: 20

[stepper_c]
step_pin: pico:gpio12
dir_pin: !pico:gpio13
enable_pin: !pico:gpio15
rotation_distance: 180
full_steps_per_rotation: 200
microsteps: 32
endstop_pin: ^pico:gpio9
position_endstop: 5.0
position_min: -3600000
position_max: 3600000
homing_speed: 5
homing_retract_dist: 5
homing_positive_dir: True

[bed_mesh]
speed: 150
horizontal_move_z: 6
mesh_min: 5,5
mesh_max: 145,170
algorithm: bicubic
probe_count: 4,4
fade_start: 1
fade_end: 10

[heater_fan my_nozzle_fan]
pin: PB0
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

#[heater_bed]
#heater_pin: pico:gpio0
#sensor_type: EPCOS 100K B57560G104F
#sensor_pin: pico:gpio26
#control: pid
#pid_Kp: 325.10
#pid_Ki: 63.35
#pid_Kd: 417.10
#min_temp: 0
#max_temp: 70

[fan]
pin: PB1

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[mcu pico]
serial: /dev/serial/by-id/usb-Klipper_rp2040_E6616407E3697C2A-if00
restart_method: command

[mcu rpi]
serial: /tmp/klipper_host_mcu

[bed_screws]
screw1: 24,24
screw2: 168,24
screw3: 168,168
screw4: 24,168

[static_digital_output display_reset]
pins: !PC6, !PD13

[pause_resume]
recover_velocity: 50

[gcode_arcs]
resolution: 0.1

[display_status]
[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro G29]
gcode:
    BED_MESH_CALIBRATE

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set use_fw_retract = False if not macro_found
                     else False if client.use_fw_retract is not defined
                     else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
                     else False %} 
  {% set unretract      = 1.0  if not macro_found else client.unretract|default(1.0)|abs %}
  {% set sp_unretract   = 2100 if not macro_found else client.speed_unretract|default(35) * 60 %}
  {% set sp_move        = velocity if not macro_found else client.speed_move|default(velocity) %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude %}
    {% if use_fw_retract %}
      G11
    {% else %}
      M83
      G1 E{unretract} F{sp_unretract}
      {% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
    {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough %s" % use_fw_retract)}
  {% endif %}  
  RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)} 

[heater_fan my_nozzle_fan]
pin: PB0
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    M107
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

